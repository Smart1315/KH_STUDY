package com.kh.mini.model.dao;

import java.io.EOFException;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileOutputStream;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.util.ArrayList;

import com.kh.mini.model.vo.Student;

public class StudentDAO {
	private String fileName = "Student.txt";
	private ArrayList<Student> list = new ArrayList<Student>();

	public boolean saveStudent(Student student) {
		list = readStudent();
		System.out.println(list);
		if (list.contains(student)) {
			return false;
		} else {
			list.add(student);
		}

		try (ObjectOutputStream oos = new ObjectOutputStream(new FileOutputStream(fileName));) {
			for (int i = 0; i < list.size(); i++) {

			}
		} catch (FileNotFoundException e) {
			e.printStackTrace();
		} catch (IOException e) {
			e.printStackTrace();
		}

		return true;
	}

	public ArrayList<Student> readStudent() {
		ArrayList<Student> studentList = new ArrayList<Student>();

		try (ObjectOutputStream oos = new ObjectOutputStream(new FileOutputStream(fileName));
				ObjectInputStream ois = new ObjectInputStream(new FileInputStream(fileName));) {
			while (true) {
				studentList.add((Student) ois.readObject());

			}

		} catch (FileNotFoundException e) {
			e.printStackTrace();
		} catch (ClassNotFoundException e) {
			e.printStackTrace();
		} catch (EOFException e) {

		} catch (IOException e) {
			e.printStackTrace();
		}

		return studentList;
	}
}
