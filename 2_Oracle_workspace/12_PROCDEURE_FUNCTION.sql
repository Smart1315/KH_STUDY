-- 프로시저(PROCEDURE)
-- PL/SQL을 저장하는 객체
-- 필요할 때마다 복잡한 구문을 다시 입력할 필요 없이 간단하게 호출해서 실행 결과를 얻을 수 있음

CREATE TABLE EMP_DUP
AS
SELECT * FROM EMPLOYEE;

SELECT * FROM EMP_DUP;

CREATE OR REPLACE PROCEDURE DEL_ALL_EMP
IS
BEGIN
    DELETE FROM EMP_DUP;
    COMMIT;
END;
/

EXECUTE DEL_ALL_EMP;
EXEC DEL_ALL_EMP;

SELECT * FROM EMP_DUP;

SELECT * FROM USER_SOURCE;

-- 매개변수 있는 프로시저
COMMIT;

CREATE OR REPLACE PROCEDURE DEL_EMP_ID(V_EMP_ID EMPLOYEE.EMP_ID%TYPE)
IS
BEGIN
    DELETE FROM EMPLOYEE
    WHERE EMP_ID = V_EMP_ID;
END;
/

SELECT * FROM EMPLOYEE;

EXECUTE DEL_EMP_ID('&사번');

ROLLBACK;

-- IN/OUT 매개변수 있는 프로시저
-- IN 매개변수 : 프로시저 내부에서 사용될 변수
-- OUT 매개변수 : 프로시저 외부(호출부)에서 사용될 변수
-- 사용자가 입력한 사번으로 사원의 이름, 급여, 보너스 조회하는 SELECT_EMP_ID 프로시저 생성
CREATE OR REPLACE PROCEDURE SELECT_EMP_ID(
    V_EMP_ID IN EMPLOYEE.EMP_ID%TYPE,
    V_EMP_NAME OUT EMPLOYEE.EMP_NAME%TYPE,
    V_SALARY OUT EMPLOYEE.SALARY%TYPE,
    V_BONUS OUT EMPLOYEE.BONUS%TYPE
)
IS
BEGIN
    SELECT EMP_NAME, SALARY, NVL(BONUS, 0)
    INTO V_EMP_NAME, V_SALARY, V_BONUS
    FROM EMPLOYEE
    WHERE EMP_ID = V_EMP_ID;
    
END;
/

-- 바인드 변수
-- SQL문을 실행할 때 SQL에 사용 값을 전달할 수 있는 통로 역할을 하는 변수
VARIABLE VAR_EMP_NAME VARCHAR2(30);
VAR VAR_SALARY NUMBER;
VAR VAR_BONUS NUMBER;

EXEC SELECT_EMP_ID('&사번', :VAR_EMP_NAME, :VAR_SALARY, :VAR_BONUS);

PRINT VAR_EMP_NAME;
PRINT VAR_SALARY;
PRINT VAR_BONUS;

SET AUTOPRINT ON;

-- 프로시저를 생성하여 실행
CREATE OR REPLACE PROCEDURE SELECT_EMP_ID_EXE(EMP_ID EMPLOYEE.EMP_ID%TYPE)
IS
    EMP_NAME EMPLOYEE.EMP_NAME%TYPE;
    SALARY EMPLOYEE.SALARY%TYPE;
    BONUS EMPLOYEE.BONUS%TYPE;
BEGIN
    SELECT_EMP_ID(EMP_ID, EMP_NAME, SALARY, BONUS);
    
    DBMS_OUTPUT.PUT_LINE('이름 : ' || EMP_NAME);
    DBMS_OUTPUT.PUT_LINE('급여 : ' || SALARY);
    DBMS_OUTPUT.PUT_LINE('보너스 율 : ' || BONUS * 100 || '%');
END;
/

EXEC SELECT_EMP_ID_EXE('&사번');
    
-- 사번을 입력 받아 해당 사원의 연봉을 계산하고 리턴하는 함수 생성
CREATE OR REPLACE FUNCTION BONUS_CALC(V_EMP_ID EMPLOYEE.EMP_ID%TYPE)
RETURN NUMBER
IS
    V_SAL EMPLOYEE.SALARY%TYPE;
    V_BONUS EMPLOYEE.BONUS%TYPE;
    CALC_SAL NUMBER;
BEGIN
    SELECT SALARY, NVL(BONUS, 0)
    INTO V_SAL, V_BONUS
    FROM EMPLOYEE
    WHERE EMP_ID = V_EMP_ID;
    
    CALC_SAL := (V_SAL * (1 + V_BONUS)) * 12;
    
    RETURN CALC_SAL;
END;
/

VARIABLE VAR_CALC NUMBER;

EXEC :VAR_CALC := BONUS_CALC('&사번');

SELECT EMP_ID, EMP_NAME, BONUS_CALC(EMP_ID)
FROM EMPLOYEE
WHERE BONUS_CALC(EMP_ID) > 30000000;
