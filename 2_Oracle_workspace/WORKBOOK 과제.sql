-- SQL01_SELECT(Basic)
-- 1.
SELECT DEPARTMENT_NAME "학과 명", CATEGORY "계열"
FROM TB_DEPARTMENT;

-- 2.
SELECT DEPARTMENT_NAME || '의 정원은 ' || CAPACITY || ' 명 입니다.' "학과별 정원"
FROM TB_DEPARTMENT;

-- 3.
SELECT STUDENT_NAME
FROM TB_STUDENT
     JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
WHERE DEPARTMENT_NAME = '국어국문학과'
      AND ABSENCE_YN = 'Y';
      
-- 4.
SELECT STUDENT_NAME
FROM TB_STUDENT
WHERE STUDENT_NO IN ('A513079', 'A513090', 'A513091', 'A513110', 'A513119');

-- 5.
SELECT DEPARTMENT_NAME, CATEGORY
FROM TB_DEPARTMENT
WHERE CAPACITY BETWEEN 20 AND 30;

-- 6.
SELECT PROFESSOR_NAME
FROM TB_PROFESSOR
WHERE DEPARTMENT_NO IS NULL;

-- 7.
SELECT STUDENT_NAME
FROM TB_STUDENT
WHERE DEPARTMENT_NO IS NULL;

-- 8.
SELECT CLASS_NO
FROM TB_CLASS
WHERE PREATTENDING_CLASS_NO IS NOT NULL;

-- 9. 
SELECT DISTINCT CATEGORY
FROM TB_DEPARTMENT;

-- 10.
SELECT STUDENT_NO, STUDENT_NAME, STUDENT_SSN
FROM TB_STUDENT
WHERE ABSENCE_YN = 'N'
      AND EXTRACT(YEAR FROM ENTRANCE_DATE) = 2002
      AND STUDENT_ADDRESS LIKE '%전주%';

-- SQL02_SELECT(Function)
-- 1.
SELECT STUDENT_NO 학번, STUDENT_NAME 이름, EXTRACT(YEAR FROM ENTRANCE_DATE) 입학년도
FROM TB_STUDENT
WHERE DEPARTMENT_NO = 002
ORDER BY 입학년도;

-- 2.
SELECT PROFESSOR_NAME, PROFESSOR_SSN
FROM TB_PROFESSOR
WHERE PROFESSOR_NAME NOT LIKE '___';
TRUNC(MONTHS_BETWEEN(TRUNC(SYSDATE), TO_DATE('19890326','YYYYMMDD')) / 12)
-- 3.
SELECT PROFESSOR_NAME 교수이름, TRUNC(MONTHS_BETWEEN(TRUNC(SYSDATE), TO_DATE('19' || SUBSTR(PROFESSOR_SSN, 1, 6),'YYYYMMDD')) / 12) 나이
FROM TB_PROFESSOR
WHERE MOD(SUBSTR(PROFESSOR_SSN, 8, 1), 2) = 1
ORDER BY 나이;

-- 4.
SELECT SUBSTR(PROFESSOR_NAME, 2) 이름
FROM TB_PROFESSOR;

-- 5. 
SELECT STUDENT_NO, STUDENT_NAME
FROM TB_STUDENT
WHERE EXTRACT(YEAR FROM ENTRANCE_DATE) - EXTRACT(YEAR FROM TO_DATE(SUBSTR(STUDENT_SSN, 1, 6))) > 19;

-- 6.
SELECT TO_CHAR(TO_DATE('20201225'), 'DAY') FROM DUAL;

-- 7.
SELECT EXTRACT(YEAR FROM TO_DATE('99/10/11', 'YY/MM/DD')) || '/' || EXTRACT(MONTH FROM TO_DATE('99/10/11', 'YY/MM/DD')) || '/' || EXTRACT(DAY FROM TO_DATE('99/10/11', 'YY/MM/DD')) a, 
       EXTRACT(YEAR FROM TO_DATE('49/10/11', 'YY/MM/DD')) || '/' || EXTRACT(MONTH FROM TO_DATE('49/10/11', 'YY/MM/DD')) || '/' || EXTRACT(DAY FROM TO_DATE('49/10/11', 'YY/MM/DD')) b,
       EXTRACT(YEAR FROM TO_DATE('99/10/11', 'RR/MM/DD')) || '/' || EXTRACT(MONTH FROM TO_DATE('99/10/11', 'RR/MM/DD')) || '/' || EXTRACT(DAY FROM TO_DATE('99/10/11', 'RR/MM/DD')) c, 
       EXTRACT(YEAR FROM TO_DATE('49/10/11', 'RR/MM/DD')) || '/' || EXTRACT(MONTH FROM TO_DATE('49/10/11', 'RR/MM/DD')) || '/' || EXTRACT(DAY FROM TO_DATE('49/10/11', 'RR/MM/DD')) d
FROM DUAL;

-- 8.
SELECT STUDENT_NO, STUDENT_NAME
FROM TB_STUDENT
WHERE SUBSTR(STUDENT_NO, 1, 1) != 'A';

-- 9.
SELECT ROUND(AVG(POINT), 1)
FROM TB_GRADE
WHERE STUDENT_NO = 'A517178';

-- 10.
SELECT DEPARTMENT_NO 학과번호, COUNT(*) "학생수(명)"
FROM TB_STUDENT
GROUP BY DEPARTMENT_NO
ORDER BY DEPARTMENT_NO;

-- 11.
SELECT COUNT(*)
FROM TB_STUDENT
WHERE COACH_PROFESSOR_NO IS NULL;

-- 12.
SELECT SUBSTR(TERM_NO, 1, 4) 년도, ROUND(AVG(POINT), 1) "년도 별 평점"
FROM TB_GRADE
WHERE STUDENT_NO = 'A112113'
GROUP BY SUBSTR(TERM_NO, 1, 4)
ORDER BY 년도;

-- 13.
SELECT DEPARTMENT_NO 학과코드명, SUM(CASE WHEN ABSENCE_YN = 'Y' THEN 1 ELSE 0 END) "휴학생 수"
FROM TB_STUDENT
GROUP BY DEPARTMENT_NO
ORDER BY DEPARTMENT_NO;

SELECT DEPARTMENT_NO 학과코드명, COUNT(*) "휴학생 수"
FROM TB_STUDENT
WHERE ABSENCE_YN = 'Y'
GROUP BY DEPARTMENT_NO
ORDER BY DEPARTMENT_NO;

-- 14.
SELECT STUDENT_NAME 동일이름, COUNT(*) "동명인 수"
FROM TB_STUDENT
GROUP BY STUDENT_NAME
HAVING COUNT(*) > 1
ORDER BY STUDENT_NAME;

-- 15.
SELECT SUBSTR(TERM_NO, 1, 4) 년도, SUBSTR(TERM_NO, 5) 학기, ROUND(AVG(POINT), 1) 평점
FROM TB_GRADE
WHERE STUDENT_NO = 'A112113'
GROUP BY ROLLUP(SUBSTR(TERM_NO, 1, 4), SUBSTR(TERM_NO, 5));

-- SQL03_SELECT(Option)
-- 1.
SELECT STUDENT_NAME "학생 이름", STUDENT_ADDRESS "주소지"
FROM TB_STUDENT
ORDER BY STUDENT_NAME;

-- 2.
SELECT STUDENT_NAME, STUDENT_SSN
FROM TB_STUDENT
WHERE ABSENCE_YN = 'Y'
ORDER BY SUBSTR(STUDENT_SSN, 1, 6) DESC;

-- 3. 
SELECT STUDENT_NAME "학생 이름", STUDENT_NO "학번", STUDENT_ADDRESS "거주지 주소"
FROM TB_STUDENT
WHERE (STUDENT_ADDRESS LIKE '%강원도%'
      OR STUDENT_ADDRESS LIKE '%경기도%')
      AND SUBSTR(STUDENT_NO, 1, 1) != 'A'
ORDER BY STUDENT_NAME;

-- 4.
SELECT PROFESSOR_NAME, PROFESSOR_SSN
FROM TB_PROFESSOR
     LEFT JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
WHERE DEPARTMENT_NAME = '법학과'
ORDER BY SUBSTR(PROFESSOR_SSN, 1, 6);

-- 5.
SELECT STUDENT_NO, TRIM(TO_CHAR(POINT, '9.00')) "POINT"
FROM TB_GRADE
WHERE TERM_NO = '200402'
      AND CLASS_NO = 'C3118100'
ORDER BY POINT DESC;

-- 6.
SELECT STUDENT_NO, STUDENT_NAME, DEPARTMENT_NAME
FROM TB_STUDENT
     LEFT JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
ORDER BY STUDENT_NAME;

-- 7.
SELECT CLASS_NAME, DEPARTMENT_NAME
FROM TB_CLASS
     LEFT JOIN TB_DEPARTMENT USING(DEPARTMENT_NO);
     
-- 8.
SELECT CLASS_NAME, PROFESSOR_NAME
FROM TB_CLASS
     LEFT JOIN TB_CLASS_PROFESSOR USING(CLASS_NO)
     JOIN TB_PROFESSOR USING(PROFESSOR_NO);
     
-- 9.
SELECT CLASS_NAME, PROFESSOR_NAME
FROM TB_CLASS
     LEFT JOIN TB_CLASS_PROFESSOR USING(CLASS_NO)
     JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
     JOIN TB_PROFESSOR USING(PROFESSOR_NO)
WHERE CATEGORY = '인문사회'
ORDER BY CLASS_NAME;

-- 10.
SELECT STUDENT_NO 학번, STUDENT_NAME "학생 이름", ROUND(AVG(POINT), 1) "전체 평점"
FROM TB_STUDENT
     JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
     JOIN TB_GRADE USING(STUDENT_NO)
WHERE DEPARTMENT_NAME = '음악학과'
GROUP BY STUDENT_NO, STUDENT_NAME
ORDER BY STUDENT_NO;

-- 11.
SELECT DEPARTMENT_NAME 학과이름, STUDENT_NAME 학생이름, PROFESSOR_NAME 지도교수이름
FROM TB_STUDENT
     JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
     LEFT JOIN TB_PROFESSOR ON(COACH_PROFESSOR_NO = PROFESSOR_NO)
WHERE STUDENT_NO = 'A313047';

-- 12.
SELECT STUDENT_NAME, TERM_NO
FROM TB_STUDENT
     JOIN TB_GRADE USING(STUDENT_NO)
     JOIN TB_CLASS USING(CLASS_NO)
WHERE SUBSTR(TERM_NO, 1, 4) = 2007
      AND CLASS_NAME = '인간관계론'
ORDER BY STUDENT_NAME, TERM_NO;

-- 13.
SELECT CLASS_NAME, DEPARTMENT_NAME
FROM TB_CLASS
     LEFT JOIN TB_CLASS_PROFESSOR USING(CLASS_NO)
     JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
WHERE CATEGORY = '예체능'
      AND PROFESSOR_NO IS NULL
ORDER BY CLASS_NAME;

-- 14.
SELECT STUDENT_NAME 학생이름, NVL(PROFESSOR_NAME, '지도교수 미지정') 지도교수
FROM TB_STUDENT
     JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
     LEFT JOIN TB_PROFESSOR ON(COACH_PROFESSOR_NO = PROFESSOR_NO)
WHERE DEPARTMENT_NAME = '서반아어학과';

-- 15.
SELECT STUDENT_NO 학번, STUDENT_NAME 이름, DEPARTMENT_NAME "학과 이름", AVG(POINT) 평점
FROM TB_STUDENT
     LEFT JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
     JOIN TB_GRADE USING(STUDENT_NO)
WHERE ABSENCE_YN = 'N'
GROUP BY STUDENT_NO, STUDENT_NAME, DEPARTMENT_NAME
HAVING AVG(POINT) >= 4.0
ORDER BY STUDENT_NO;

-- 16.
SELECT CLASS_NO, CLASS_NAME, AVG(POINT)
FROM TB_CLASS
     LEFT JOIN TB_GRADE USING(CLASS_NO)
     JOIN TB_DEPARTMENT USING (DEPARTMENT_NO)
WHERE DEPARTMENT_NAME = '환경조경학과'
      AND CLASS_TYPE LIKE '%전공%'
GROUP BY CLASS_NO, CLASS_NAME
ORDER BY CLASS_NO;

-- 17.
SELECT STUDENT_NAME, STUDENT_ADDRESS
FROM TB_STUDENT
WHERE DEPARTMENT_NO = (SELECT DEPARTMENT_NO
                       FROM TB_STUDENT
                       WHERE STUDENT_NAME = '최경희');

-- 18.
SELECT STUDENT_NO, STUDENT_NAME
FROM (SELECT STUDENT_NO, AVG(POINT)
      FROM TB_GRADE
           JOIN TB_STUDENT USING(STUDENT_NO)
           JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
      WHERE DEPARTMENT_NAME = '국어국문학과'
      GROUP BY STUDENT_NO
      ORDER BY AVG(POINT) DESC)
      JOIN TB_STUDENT USING(STUDENT_NO)
WHERE ROWNUM <= 1;

-- 19.
SELECT DEPARTMENT_NAME "계열 학과명", ROUND(AVG(POINT), 1) "전공평점"
FROM TB_DEPARTMENT
     LEFT JOIN TB_CLASS USING(DEPARTMENT_NO)
     JOIN TB_GRADE USING(CLASS_NO)
WHERE CATEGORY = (SELECT CATEGORY
                  FROM TB_DEPARTMENT
                  WHERE DEPARTMENT_NAME = '환경조경학과')
GROUP BY DEPARTMENT_NAME
ORDER BY DEPARTMENT_NAME;

-- SQL04_DDL
-- 1. 
CREATE TABLE TB_CATEGORY(
    NAME VARCHAR2(10),
    USE_YN CHAR(1) DEFAULT 'Y'
);

-- 2.
CREATE TABLE TB_CLASS_TYPE(
    NO VARCHAR2(5) PRIMARY KEY,
    NAME VARCHAR2(10)
);

-- 3.
ALTER TABLE TB_CATEGORY ADD PRIMARY KEY(NAME);

-- 4.
ALTER TABLE TB_CLASS_TYPE MODIFY NAME NOT NULL;

-- 5.
ALTER TABLE TB_CLASS_TYPE
MODIFY NO VARCHAR2(10)
MODIFY NAME VARCHAR2(20);

ALTER TABLE TB_CATEGORY
MODIFY NAME VARCHAR2(20);

-- 6.
ALTER TABLE TB_CLASS_TYPE
RENAME COLUMN NO TO CLASS_TYPE_NO;
ALTER TABLE TB_CLASS_TYPE
RENAME COLUMN NAME TO CLASS_TYPE_NAME;

ALTER TABLE TB_CATEGORY
RENAME COLUMN NAME TO CATEGORY_NAME;

-- 7.
ALTER TABLE TB_CATEGORY
RENAME CONSTRAINT SYS_C007190 TO PK_CATEGORY_NAME;

ALTER TABLE TB_CLASS_TYPE
RENAME CONSTRAINT SYS_C007189 TO PK_CLASS_TYPE_NO;

-- 8.
INSERT INTO TB_CATEGORY VALUES('공학', 'Y');
INSERT INTO TB_CATEGORY VALUES('자연과학', 'Y');
INSERT INTO TB_CATEGORY VALUES('의학', 'Y');
INSERT INTO TB_CATEGORY VALUES('예체능', 'Y');
INSERT INTO TB_CATEGORY VALUES('인문사회', 'Y');
COMMIT;

-- 9.
ALTER TABLE TB_DEPARTMENT 
ADD CONSTRAINT FK_DEPARTMENT_CATEGORY FOREIGN KEY(CATEGORY) REFERENCES TB_CATEGORY(CATEGORY_NAME);

-- 10. 
CREATE OR REPLACE VIEW VW_학생일반정보
AS
SELECT STUDENT_NO 학번, STUDENT_NAME 학생이름, STUDENT_ADDRESS 주소
FROM TB_STUDENT;

SELECT * FROM VW_학생일반정보;

-- 11.
CREATE OR REPLACE VIEW VW_지도면담
AS
SELECT STUDENT_NAME 학생이름, DEPARTMENT_NAME 학과이름, NVL(PROFESSOR_NAME, '지도교수 미지정') 지도교수이름
FROM TB_STUDENT
     JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
     LEFT JOIN TB_PROFESSOR ON(COACH_PROFESSOR_NO = PROFESSOR_NO)
ORDER BY DEPARTMENT_NAME;

SELECT * FROM VW_지도면담;

-- 12.
CREATE OR REPLACE VIEW VW_학과별학생수
AS
SELECT DEPARTMENT_NAME, COUNT(*) "STUDENT_COUNT"
FROM TB_STUDENT
     JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
GROUP BY DEPARTMENT_NAME
ORDER BY DEPARTMENT_NAME;

SELECT * FROM VW_학과별학생수;

-- 13.
UPDATE VW_학생일반정보
SET 학생이름 = '안영재'
WHERE 학번 = 'A213046';

-- 14.
-- WITH CHECK OPTION 또는 WITH READ ONLY 사용

-- 15.
SELECT 과목번호, 과목이름, "누적수강생수(명)"
FROM (SELECT CLASS_NO 과목번호, CLASS_NAME 과목이름, COUNT(*) "누적수강생수(명)"
      FROM TB_CLASS
      JOIN TB_GRADE USING(CLASS_NO)
      WHERE SUBSTR(TERM_NO, 1, 4) >= TO_CHAR(SYSDATE, 'DDD') - 3
      GROUP BY CLASS_NO, CLASS_NAME
      ORDER BY COUNT(*) DESC)
WHERE ROWNUM <= 3;

COMMIT;

-- SQL05_DML
-- 1.
INSERT INTO TB_CLASS_TYPE VALUES('01','전공필수');
INSERT INTO TB_CLASS_TYPE VALUES('02','전공선택');
INSERT INTO TB_CLASS_TYPE VALUES('03','교양필수');
INSERT INTO TB_CLASS_TYPE VALUES('04','교양선택');
INSERT INTO TB_CLASS_TYPE VALUES('05','논문지도');

-- 2.
CREATE TABLE TB_학생일반정보
AS
SELECT STUDENT_NO, STUDENT_NAME, STUDENT_ADDRESS
FROM TB_STUDENT;

-- 3.
CREATE TABLE TB_국어국문학과(학번, 학생이름, 출생년도, 교수이름)
AS
SELECT STUDENT_NO, STUDENT_NAME, TO_CHAR(TO_DATE(SUBSTR(STUDENT_SSN, 1, 6)), 'YYYY'), NVL(PROFESSOR_NAME, '지도교수 미지정')
FROM TB_STUDENT S
     LEFT JOIN TB_PROFESSOR ON(COACH_PROFESSOR_NO = PROFESSOR_NO)
     LEFT JOIN TB_DEPARTMENT D ON(D.DEPARTMENT_NO = S.DEPARTMENT_NO)
WHERE DEPARTMENT_NAME = '국어국문학과';

-- 4.
UPDATE TB_DEPARTMENT
SET CAPACITY = ROUND(CAPACITY * 1.1);

-- 5.
UPDATE TB_STUDENT
SET STUDENT_ADDRESS = '서울시 종로구 숭인동 181-21'
WHERE STUDENT_NO = 'A413042';

-- 6.
UPDATE TB_STUDENT
SET STUDENT_SSN = SUBSTR(STUDENT_SSN, 1, 6);

-- 7.
UPDATE TB_GRADE
SET POINT = 3.5
WHERE STUDENT_NO = (SELECT STUDENT_NO
                    FROM TB_STUDENT
                         JOIN TB_DEPARTMENT USING(DEPARTMENT_NO)
                    WHERE STUDENT_NAME = '김명훈' AND DEPARTMENT_NAME = '의학과')
      AND TERM_NO = '200501'
      AND CLASS_NO = (SELECT CLASS_NO
                      FROM TB_CLASS
                      WHERE CLASS_NAME = '피부생리학');

-- 8.
DELETE FROM TB_GRADE
WHERE STUDENT_NO IN (SELECT STUDENT_NO
                    FROM TB_STUDENT
                    WHERE ABSENCE_YN = 'Y');
                    
COMMIT;